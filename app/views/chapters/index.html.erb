<main class="container container--full-screen wrapper wrapper--small-padding wrapper--padding--both chapters-index__container">
  <section class="chapters-index__section">
    <div class="dreamy-sketch">
      <canvas class="dreamy-sketch__canvas"></canvas>
      <span class="button button--orange dreamy-sketch__button">Fini</span>
    </div>

    <% @chapters.with_instruction.each.with_index do |chapter, n| %>
      <div class="chapters-index__challenge<%= ' chapters-index__challenge--current' if n.zero? %>" data-id="<%= chapter.id %>" data-brush-class="<%= chapter.brush_class %>">
        <span class="chapters-index__challenge-number"><%= chapter.number %></span>
        <h3 class="chapters-index__instruction"><%= chapter.instruction %></h3>
        <span class="button button--orange chapters-index__challenge-button">PrÃªt</span>
      </div>
    <% end %>
  </section>
  <section class="chapters-index__section chapters-index__section--corner">
    <% @chapters.with_instruction.each.with_index do |chapter, n| %>
      <div class="chapters-index__chapter<%= ' chapters-index__chapter--current' if n.zero? %>" data-id="<%= chapter.id %>">
        <%= simple_format chapter.content %>
      </div>
    <% end %>
  </section>
</main>

<script>
  Application.init();

  var watch = function(selector, event, callback) {
    var elements = document.querySelectorAll(selector);
    for(var i = 0; i < elements.length; i++) elements[i].addEventListener(event, callback);
  };

  watch('.chapters-index__challenge-button', 'click', function() {
    var chapterInstruction = this.parentNode;

    document.querySelector('.dreamy-sketch__button').classList.remove('dreamy-sketch__button--visible');
    Application.DreamySketch.singleton.brush = new Application.DreamySketch.Brush[chapterInstruction.getAttribute('data-brush-class')]();
    Application.DreamySketch.singleton.canvas.clear();
    document.querySelector('.dreamy-sketch').classList.add('dreamy-sketch--opened');
  });

  watch('.dreamy-sketch__button', 'click', function() {
    var challenge = document.querySelector('.chapters-index__challenge--current');
    challenge.classList.remove('chapters-index__challenge--current');

    var chapter = document.querySelector('.chapters-index__chapter--current');
    chapter.classList.remove('chapters-index__chapter--current');

    document.querySelector('.dreamy-sketch').classList.remove('dreamy-sketch--opened');

    var nextChallenge = document.querySelector('.chapters-index__challenge[data-id="' + chapter.getAttribute('data-id') + '"]')

    if(nextChallenge) {
      setTimeout(function() {
        nextChallenge.classList.add('chapters-index__challenge--current');
      }, 400)
    }

    var nextChapter = chapter.nextElementSibling;
    if(nextChapter) {
      nextChapter.classList.add('chapters-index__chapter--current');
    }
    else {
      setTimeout(function() {
        window.location.href = '/books';
      }, 200);
    }
  });

  Application.DreamySketch.singleton.canvas.element.addEventListener('mousedown', function() {
    setTimeout(function() {
      document.querySelector('.dreamy-sketch__button').classList.add('dreamy-sketch__button--visible');
    }, 1000);
  });

  Application.DreamySketch.singleton.canvas.element.addEventListener('touchstart', function() {
    setTimeout(function() {
      document.querySelector('.dreamy-sketch__button').classList.add('dreamy-sketch__button--visible');
    }, 1000);
  });
</script>
